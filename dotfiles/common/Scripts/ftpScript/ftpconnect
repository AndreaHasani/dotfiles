#!/bin/bash
echo "Script For Uploading and Download With LFTP, Use -h for options"
echo "---------------------------------------------------------------"
cd /home/strixx/Scripts/ftpScript
function passArguments () {
    local has_c=0
    local sync=0
    while getopts 'duc:sl' opt "$@"; do
	case $opt in
	    c)
		# Config File Loading
		has_c=1
		source $OPTARG
		echo ""
		echo "Testing ftp response"
		x=0
		while [ $x -ne 6 ]; do
		    ping -q -c 2 $HOST 2>&1 > /dev/null
		    if [ $? -eq 0 ]; then
			echo "Server Up";
		echo "----------------------------"
			x=6;
		    else
			echo "Server Down"
		echo "----------------------------"
			x=$((x+1))
			echo $x "time"
			echo "Waiting 60s and trying again"
			if [ $x -eq 5 ]; then
			    exit 1
			fi
			sleep 60s
		    fi
		done
		;;
	    l)
		echo "Avalible Configs for -c"
		echo ""
		echo "$(ls /home/strixx/Scripts/ftpScript/config | nl)"
		exit 1
		shift
		;;
	    s)
		$sync=1
		;;
	    d)
		if [ ! $has_c -ne 0 ];then
		    return
		fi
		echo "----------------------------"
		echo "Download "
		python2 ~/Scripts/ftpScript/lftp_mirror.py shell $HOST $Remote $Local -l $USER $PASS -en -P 5 -q --no-email --exclude 'node_modules/' --exclude '.git/'
		echo "Download Finished"
		echo "----------------------------"
		echo $sync
		if [ ! $sync -eq 1 ]; then
		echo "Running rsync";
		rsync -avz -q --delete $Local $Working &&
		    echo "RSync Finished";
	    fi
		exit 1
		;;
	    u)
		if [ ! $has_c -ne 0 ];then
		    return
		fi
		echo "----------------------------"
		if [ $sync -eq 1 ];then
		echo "Running rsync";
		rsync -avz -q --delete $Working $Local &&
		    echo "RSync Finished";
	    fi
		echo "Upload"
		python2 ~/Scripts/ftpScript/lftp_mirror.py shell $HOST $Remote $Local -l $USER $PASS -enr -P 5 -q --no-email --exclude 'node_modules/' --exclude '.git/'
		echo "Upload Finished"
		exit 1
		;;
	    *)    # unknown option
		echo "Unexpected option ${flag}"
		;;
	esac
    done


}
passArguments "$@"
echo "Arguments Required"
echo ""
echo "-c	FTP Config (Neccesary)"
echo "-l	List Configs (List Configs then exit script)"
echo "-u	Upload Local to Remote"
echo "-d	Download Remote to Local"
exit 1
