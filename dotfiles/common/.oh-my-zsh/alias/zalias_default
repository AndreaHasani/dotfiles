
## Fzf
# Use FZF to switch Tmux sessions:
# bind-key s run "tmux new-window 'bash -ci fs'"
fs() {
	local -r fmt='#{session_id}:|#S|(#{session_attached} attached)'
	{ tmux display-message -p -F "$fmt" && tmux list-sessions -F "$fmt"; } \
		| awk '!seen[$1]++' \
		| column -t -s'|' \
		| fzf -q '$' --reverse --prompt 'switch session: ' -1 \
		| cut -d':' -f1 \
		| xargs tmux switch-client -t
}

## Alias

alias lfa="ls -la | egrep -v '^d' --color=auto"
alias lda="ls -la | egrep '^d' --color=auto"
alias name="title"

# Poweroff and suspend alias

alias suspend="systemctl suspend"
alias shutdown="poweroff"


### Youtube Download Alias ###

alias yt-v='youtube-dl -f "bestvideo[height >=? 720][ext=webm]"' #Download youtube video 720p
alias yt-a='youtube-dl --extract-audio -f bestaudio --audio-format mp3' #Download youtube music

# Normal Alias

alias copy="xclip -selection clipboard"
alias paste="xclip -o"
alias n="srv-nvim.py"
alias nr="nvim-remote"
alias v="vifm"
alias network="nmtui"
alias pacaur="trizen"
alias ramuse="ps aux  | awk '{print \$6/1024 \" MB\t\t\" \$11}'  | sort -n"

## Unalias

#alias d="cd `fasd -dl | fzf 2>/dev/tty`"

unalias d
unalias f


# ------------------------------------
# Docker alias and function
# ------------------------------------

# Get latest container ID
alias dl="docker ps -l -q"

# Get container process
alias dps="docker ps"

# Get process included stop container
alias dpa="docker ps -a"

# Get images
alias di="docker images"

# Get container IP
alias dip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"

# Run deamonized container, e.g., $dkd base /bin/echo hello
alias dkd="docker run -d -P"

# Run interactive container, e.g., $dki base /bin/bash
alias dki="docker run -i -t -P"

# Execute interactive container, e.g., $dex base /bin/bash
alias dex="docker exec -i -t"

# Stop all containers
dstop() { docker stop $(docker ps -a -q); }

# Remove all containers
drm() { docker rm $(docker ps -a -q); }

# Stop and Remove all containers
alias drmf='docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)'

# Remove all images
dri() { docker rmi $(docker images -q); }

# Dockerfile build, e.g., $dbu tcnksm/test
dbu() { docker build -t=$1 .; }

# Show all alias related docker
dalias() { alias | grep 'docker' | sed "s/^\([^=]*\)=\(.*\)/\1 => \2/"| sed "s/['|\']//g" | sort; }

# Bash into running container
dbash() { docker exec -it $(docker ps -aqf "name=$1") bash; }

# Docker-compose-up
alias dcu='docker-compose up -d'
alias dcd='docker-compose down'

## Default alias
alias bc='bc -l'
alias sha1='openssl sha1'
alias ports='netstat -tulanp'

## Virtual Alias
alias virtual-windows7="qemu-system-x86_64 -drive format=raw,file=/home/strixx/data/virtual_os/hdd/windows_hdd -enable-kvm -m 1024 -cpu host"

## System
alias ps-p="ps ax -o pid,ni,cmd"
alias ps-cpu="ps -eo pid,ppid,cmd,%mem,%cpu,ni --sort=-%cpu | head -n 20"
alias ps-mem="ps -eo pid,ppid,cmd,%mem,%cpu,ni --sort=-%mem | head -n 20"

alias \?="zsh_help"
unset ex
alias ex="cht.sh "


## Flask Init (Make new project from template)
flaskInit() {
    dir=`pwd`
    echo dir
    rsync -av "/home/strixx/projects/websites/Flask Bare Template/" $dir --exclude ".git*" --exclude ".gitignore" --exclude "README" &&
}
alias flask init="flaskInit"


alias lbg="find / -xdev -type f -size +500M -exec ls -lah {} \; | sort -nk 5"
